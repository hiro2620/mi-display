import sys
import xml.dom.minidom as minidom
from xml.etree.ElementTree import Element, SubElement, ElementTree, tostring

def convert_electrode_positions(input_file, output_file):
    """
    Convert electrode positions from text format to XML format.
    
    Input format:
    P3,-60,51,1
    T7,-90,0,1
    ...
    
    Output format:
    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <!-- Generated by EasyCap Configurator 14.06.2017 -->
    <Electrodes defaults="false">
      <Electrode>
        <Name>P3</Name>
        <Theta>-60</Theta>
        <Phi>51</Phi>
        <Radius>1</Radius>
      </Electrode>
      ...
    </Electrodes>
    """
    # Create the root element
    root = Element('Electrodes')
    root.set('defaults', 'false')
    
    # Read the input file
    try:
        with open(input_file, 'r') as f:
            for line in f:
                # Skip empty lines
                if not line.strip():
                    continue
                
                # Parse the line
                parts = line.strip().split(',')
                if len(parts) < 3:
                    print(f"Skipping invalid line: {line.strip()}")
                    continue
                    
                name = parts[0]
                theta = parts[1]
                phi = parts[2]
                
                # Create electrode element
                electrode = SubElement(root, 'Electrode')
                
                # Add subelements
                name_elem = SubElement(electrode, 'Name')
                name_elem.text = name
                
                theta_elem = SubElement(electrode, 'Theta')
                theta_elem.text = theta
                
                phi_elem = SubElement(electrode, 'Phi')
                phi_elem.text = phi
                
                radius_elem = SubElement(electrode, 'Radius')
                radius_elem.text = '1'
    except Exception as e:
        print(f"Error reading input file: {e}")
        return False
    
    # Create the XML tree
    tree = ElementTree(root)
    
    # Convert to string with pretty formatting
    xml_str = minidom.parseString(tostring(root, encoding='utf-8')).toprettyxml(indent="  ")
    
    # Replace XML declaration with the requested format including encoding and standalone attributes
    xml_lines = xml_str.split('\n')
    xml_lines[0] = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'
    xml_lines.insert(1, '<!-- Generated by EasyCap Configurator 14.06.2017 -->')
    xml_str = '\n'.join(xml_lines)
    
    # Write the output file
    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(xml_str)
        return True
    except Exception as e:
        print(f"Error writing output file: {e}")
        return False

def main():
    if len(sys.argv) != 3:
        print("Usage: python electrode-pos.py <input_file> <output_file>")
        return
    
    input_file = sys.argv[1]
    output_file = sys.argv[2]
    
    if convert_electrode_positions(input_file, output_file):
        print(f"Successfully converted {input_file} to {output_file}")
    else:
        print("Conversion failed")

if __name__ == "__main__":
    main()
